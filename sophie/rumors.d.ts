// AUTO-GENERATED by typescript-type-def

export default types;
export namespace types {
    export type Usize = number;
    export type Rumor = {

        /**
         * The name of the rumor as shown in the in-game list.
         */
        "name": string;
        "type": string;
        "group": types.Usize;
        "ev_tag": (string | null);
        "fieldmap_tag": (string | null);
        "monster_tag": (string | null);
        "item_tag": (string | null);
        "image_no": types.Usize;
        "icon_image_no": types.Usize;

        /**
         * The cost of the rumor.
         */
        "cost": types.Usize;
        "count": (types.Usize | null);
        "deadline": types.Usize;
        "interval": types.Usize;

        /**
         * Whether this rumor can be bought again after it has been completed.
         */
        "redo": boolean;
        "ev_begin": (string | null);
        "ev_end": (string | null);
        "cond_quest_group": (string | null);
        "priority": types.Usize;
        "probability": types.Usize;
        "register": boolean;

        /**
         * The title at the top of the rumor preview.
         */
        "category": string;

        /**
         * The text that is shown in the rumor preview.
         */
        "introduction": string;

        /**
         * The text spoken by the rumor seller.
         */
        "text": string;
    };
}
